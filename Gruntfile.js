module.exports = function (grunt) {

    var photoSize = 262; // 262px square
    var badgeSize = 90;

    // Project configuration.
    grunt.initConfig({

        // Get package information
        pkg: grunt.file.readJSON('package.json'),

        clean: {
            dist: {
                src: ['dist']
            },
            tmp: {
                src: ['tmp']
            }
        },

        jshint: {
            gruntfile: {
                src: ['Gruntfile.js']
            },
            dist: {
                src: ['src/js/*.js']
            }
        },

        copy: {
            dist: {
                cwd: 'src',
                src: ['**', '.htaccess', '!index.html.tpl', '!img/**', '!css/**', '!js/**'],
                dest: 'dist',
                expand: true
            }
        },

        uglify: {
            dist: {
                src: ['src/js/**/*.js'],
                dest: 'tmp/script.min.js',
                options: {
                    preserveComments: false
                }
            }
        },

        // Compass compile for css
        less: {
            dist: {
                options: {
                    strictMath: true,
                    paths: ['node_modules/bootstrap/less', 'src/css']
                },
                files: {
                    'tmp/compiled.css': 'src/css/style.less'
                }
            }
        },

        uncss: {
            dist: {
                files: {
                    'tmp/tidy.css': 'tmp/index1.html'
                }
            }
        },

        cssmin: {
            dist: {
                files: {
                    'tmp/minified.css': 'tmp/tidy.css'
                }
            }
        },

        image_resize: {
            lossless: {
                options: {
                    width: photoSize,
                    height: photoSize,
                    quality: 1.0
                },
                files: {
                    'dist/photo.jpg': 'src/img/photo.jpg'
                }
            },
            compressed: {
                options: {
                    width: photoSize * 0.25,
                    height: photoSize * 0.25,
                    quality: 0.0
                },
                files: {
                    'tmp/photo.gif': 'src/img/photo.jpg'
                }
            }
        },

        base64: {
            dist: {
                files: {
                    'tmp/photo.b64': 'tmp/photo.gif'
                }
            }
        },

        template: {
            dist: {
                options: {
                    data: function () {

                        var data = {
                            photo: grunt.file.read('tmp/photo.b64'),
                            photoSize: photoSize
                        };

                        return data;
                    }
                },
                files: {
                    'tmp/index1.html': ['src/index.html.tpl']
                }
            }
        },

        processhtml: {
            dist: {
                files: {
                    'tmp/index2.html': ['tmp/index1.html']
                }
            }
        },

        // Compress HTML
        htmlmin: {
            dist: {
                options: {
                    removeComments: true,
                    collapseWhitespace: true
                },
                files: {
                    'dist/index.html': 'tmp/index2.html'
                }
            }
        },

        // Watch tasks
        watch: {

            // If this file changes we need to reloaded
            // Furthermore it might be necessary to rebuild files that are generated by settings in here
            gruntfile: {
                files: ['Gruntfile.js'],
                tasks: ['jshint:gruntfile'],
                options: {
                    reload: true
                }
            },

            // Validate and compress Javascript on change
            js: {
                files: ['src/js/**/*.js'],
                tasks: ['build:html+css+js'],
                options: {
                    interrupt: true,
                    livereload: true
                }
            },

            // Compile CSS on change
            css: {
                files: 'src/css/**/*.less',
                tasks: ['build:html+css+js'],
                options: {
                    interrupt: true,
                    livereload: true
                }
            },

            // Compile and compress HTML on change
            html: {
                files: 'src/index.html.tpl',
                tasks: ['build:html+css+js'],
                options: {
                    interrupt: true,
                    livereload: true
                }
            },

            other: {
                files: ['src/**', 'src/.htaccess', '!src/index.html.tpl', '!src/js/**', '!src/css/**', '!src/img/**'],
                tasks: ['copy'],
                options: {
                    interrupt: true,
                    livereload: true
                }
            }
        }

    });

    // Load the plugins
    require('load-grunt-tasks')(grunt);
    
    grunt.registerTask(
        'build:html+css+js',
        'Compile template to HTML and compress',
        function () {

            grunt.task.run([

                'template:dist',

                'less:dist',
                'uncss:dist',
                'cssmin:dist',

                'uglify:dist',

                'processhtml:dist',
                'htmlmin:dist'
            ]);
        }
    );

    grunt.registerTask(
        'build:img',
        'Resize and compress images',
        ['image_resize:lossless', 'image_resize:compressed', 'base64:dist']
    );

    grunt.registerTask(
        'build',
        'Make a clean build',
        ['clean:dist', 'clean:tmp', 'build:img', 'build:html+css+js', 'copy:dist']
    );

};
